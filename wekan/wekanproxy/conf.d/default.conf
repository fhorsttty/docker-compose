# this section is needed to proxy web-socket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# HTTP
server {
  listen 80;  # if this is not a default server, remove "default_server".
  #listen [::]:80 ipv6only=on;

  server_name example.co.jp;  # change your url :)

  # redirect non-SSL to SSL
  location / {
    # change your url :)
    rewrite ^https://example.co.jp$request_uri? permanent; 
  }
}

# HTTPS server
server {
  listen 443 ssl http2;   # we enable HTTP/2 here (previously SPDY)
  server_name example.co.jp;  # chagen your url :)

  ssl_certificate /etc/nginx/ssl/self_signed.crt;
  ssl_certificate_key /etc/nginx/ssl/private.key;

  # If your application is not compatible with IE <= 10, this will redirect visitors
  # to a page advising a browser updatea.
  # This works because IE 11 does not present itself as MSIE anymore.
  if ($http_user_agent ~ "MSIE") {
    return 303 https://browser-update.org/update.html;
  }

  # Pass requests to Wekan.
  # If you have Wekan at https://example.co.jp/wekan, change location to:
  # location /Wekan {
  location / {
    proxy_pass http://wekan;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr;  # preserve client IP

    # this settings allows the browser to cache the application in a way compatible
    # with Meteor on every application update the name of CSS and JS file is different,
    # so they can be cache infinitely (here: 30 days).
    # the root path (/) MUST NOT be cached
    #if ($uri != '/Wekan') {
    #  expires 30d;
    #}
  }
}
